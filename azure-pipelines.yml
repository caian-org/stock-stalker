trigger:
  paths:
    exclude:
      - README.md

  tags:
    include:
      - v*

  branches:
    include:
      - master
      - dev


variables:
  vmImageName: ubuntu-latest
  distDirectoryName: dist
  artifactFileName: bundle.zip


jobs:
  - job: Validation
    pool:
      vmImage: $(vmImageName)

    steps:
      - template: .ci/templates/python-version.yml
      - template: .ci/templates/python-packages.yml

      - task: Bash@3
        inputs:
          targetType: inline
          script: make check
        displayName: Check coding style

      - task: Bash@3
        inputs:
          targetType: inline
          script: make lint
        displayName: Check linter

  - job: Test
    pool:
      vmImage: $(vmImageName)

    steps:
      - template: .ci/templates/python-version.yml
      - template: .ci/templates/python-packages.yml

      - task: Bash@3
        inputs:
          targetType: inline
          script: make test
        displayName: Run tests

  - job: Deploy
    pool:
      vmImage: $(vmImageName)

    dependsOn:
      - Validation
      - Test
    condition: |
      and
      (
        in(dependencies.Validation.result, 'Succeeded'),
        in(dependencies.Test.result, 'Succeeded'),
        startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
      )

    steps:
      - template: .ci/templates/python-version.yml
      - template: .ci/templates/python-packages.yml
        parameters:
          bare: 'true'

      - task: Bash@3
        inputs:
          targetType: inline
          script: pip3 install awscli
        displayName: Install awscli

      - task: Bash@3
        inputs:
          targetType: inline
          script: make venv
        displayName: Create python virtual env

      - task: Bash@3
        inputs:
          targetType: inline
          script: make bundle
        displayName: Bundle package for deployment
        env:
          DIST: $(distDirectoryName)
          ARTIFACT: $(artifactFileName)

      - task: Bash@3
        inputs:
          targetType: inline
          script: make deploy
        displayName: Deploy package to AWS Lambda
        env:
          DIST: $(distDirectoryName)
          ARTIFACT: $(artifactFileName)
          AWS_DEFAULT_REGION: $(aws.region)
          AWS_ACCESS_KEY_ID: $(aws.access_key)
          AWS_SECRET_ACCESS_KEY: $(aws.secret_key)
          AWS_LAMBDA_NAME: $(aws.lambda_name)
          AWS_S3_BUCKET: $(aws.s3_bucket)
